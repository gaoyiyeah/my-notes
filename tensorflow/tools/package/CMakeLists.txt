CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(TENSORFLOW_INCLUDE_PATH /usr/local/include/tf)
SET(TENSORFLOW_LIBARY /usr/local/lib/libtensorflow_cc.so)
SET(TENSORFLOW_FRAMEWORK_LIBARY /usr/local/lib/libtensorflow_framework.so)
MESSAGE(STATUS "TENSORFLOW_INCLUDE_PATH ${TENSORFLOW_INCLUDE_PATH}")
MESSAGE(STATUS "TENSORFLOW_LIBARY ${TENSORFLOW_LIBARY}")
MESSAGE(STATUS "TENSORFLOW_FRAMEWORK_LIBARY ${TENSORFLOW_FRAMEWORK_LIBARY}")
SET(EIGEN_INCLUDE_PATH /usr/local/include/eigen3)
SET(ABSL_INCLUDE_PATH /usr/local/include/tf/absl)
MESSAGE(STATUS "ABSL_INCLUDE_PATH" ${ABSL_INCLUDE_PATH})

INCLUDE(FindProtobuf)
FIND_PACKAGE(Protobuf REQUIRED)

INCLUDE_DIRECTORIES(${PROTOBUF_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${TENSORFLOW_INCLUDE_PATH})
INCLUDE_DIRECTORIES(${EIGEN_INCLUDE_PATH})
INCLUDE_DIRECTORIES(${ABSL_INCLUDE_PATH})

SET(EXAMPLE_LIBRARIES
    ${PROTOBUF_LIBRARY}
    ${TENSORFLOW_FRAMEWORK_LIBARY}
    ${TENSORFLOW_LIBARY})

ADD_EXECUTABLE(example example.cpp)

SET(LDFLAGS "-std=c++11 -O3 -ggdb -Wall")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}${LDFLAGS}")

MESSAGE(STATUS "CMAKE_CXX_COMPILER: ${CMAKE_CXX_COMPILER}")
MESSAGE(STATUS "CMAKE_CXX_FLAGS: ${CMAKE_CXX_FLAGS}")
TARGET_LINK_LIBRARIES(example ${EXAMPLE_LIBRARIES} ${CMAKE_CXX_FLAGS})
